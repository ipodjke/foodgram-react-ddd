version: '3.3'

services:
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    volumes:
      - ../frontend/:/app/result_build/

  nginx:
    image: nginx:1.19.3
    ports:
      - 80:80
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs:/usr/share/nginx/html/api/docs/

  db:
    image: postgres:12.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ../backend/envfiles/.env.dev
    networks: 
      - foodgram_network

  web:
    build:
      context: ../backend
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - 8080:8000
    volumes:
      - ../backend:/usr/src/app/web
      - ../data:/usr/src/app/data
    env_file:
      - ../backend/envfiles/.env.dev
    depends_on:
      - db
    networks: 
      - foodgram_network

networks:
  foodgram_network:
    driver: bridge

volumes:
  postgres_data: